package org.jax.gweaver.variant.orthology.domain;

import java.util.Objects;

import org.neo4j.ogm.annotation.Index;
import org.neo4j.ogm.annotation.NodeEntity;
import org.neo4j.ogm.annotation.Relationship;

@NodeEntity(label="Transcript")
public class Transcript extends GeneticEntity {

	@Index(unique=true)
	private String transcriptId;
	
    private String transcriptName;
    
    private String geneName;
	private String geneBiotype;
    private String geneId;
    private String transcriptBiotype;
    
	@Relationship(type = "PRODUCES", direction = Relationship.INCOMING)
    private Gene gene;
	
	
	@Relationship(type = "HAS_A", direction = Relationship.OUTGOING)
	private Variant variant;

	// Autogenerated
	/**
	 * @return the transcript_id
	 */
	public String getTranscriptId() {
		return transcriptId;
	}


	/**
	 * @param transcript_id the transcript_id to set
	 */
	public void setTranscriptId(String transcript_id) {
		this.transcriptId = transcript_id;
	}


	/**
	 * @return the transcript_name
	 */
	public String getTranscriptName() {
		return transcriptName;
	}


	/**
	 * @param transcript_name the transcript_name to set
	 */
	public void setTranscriptName(String transcript_name) {
		this.transcriptName = transcript_name;
	}


	/**
	 * @return the gene_id
	 */
	public String getGeneId() {
		return geneId;
	}


	/**
	 * @param gene_id the gene_id to set
	 */
	public void setGeneId(String gene_id) {
		this.geneId = gene_id;
	}

	/**
	 * @return the transcript_biotype
	 */
	public String getTranscriptBiotype() {
		return transcriptBiotype;
	}


	/**
	 * @param transcript_biotype the transcript_biotype to set
	 */
	public void setTranscriptBiotype(String transcript_biotype) {
		this.transcriptBiotype = transcript_biotype;
	}


	/**
	 * @return the gene
	 */
	public Gene getGene() {
		return gene;
	}


	/**
	 * @param gene the gene to set
	 */
	public void setGene(Gene gene) {
		this.gene = gene;
	}


	/**
	 * @return the variant
	 */
	public Variant getVariant() {
		return variant;
	}


	/**
	 * @param variant the variant to set
	 */
	public void setVariant(Variant variant) {
		this.variant = variant;
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + Objects.hash(gene, geneBiotype, geneId, geneName, transcriptBiotype,
				transcriptId, transcriptName, variant);
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (!(obj instanceof Transcript))
			return false;
		Transcript other = (Transcript) obj;
		return Objects.equals(gene, other.gene) && Objects.equals(geneBiotype, other.geneBiotype)
				&& Objects.equals(geneId, other.geneId) && Objects.equals(geneName, other.geneName)
				&& Objects.equals(transcriptBiotype, other.transcriptBiotype)
				&& Objects.equals(transcriptId, other.transcriptId)
				&& Objects.equals(transcriptName, other.transcriptName) && Objects.equals(variant, other.variant);
	}


	/**
	 * @return the gene_name
	 */
	public String getGeneName() {
		return geneName;
	}


	/**
	 * @param gene_name the gene_name to set
	 */
	public void setGeneName(String gene_name) {
		this.geneName = gene_name;
	}


	/**
	 * @return the gene_biotype
	 */
	public String getGeneBiotype() {
		return geneBiotype;
	}


	/**
	 * @param gene_biotype the gene_biotype to set
	 */
	public void setGeneBiotype(String gene_biotype) {
		this.geneBiotype = gene_biotype;
	}

	// Auto-generated stuff
}