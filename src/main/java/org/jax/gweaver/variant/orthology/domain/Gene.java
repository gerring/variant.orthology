package org.jax.gweaver.variant.orthology.domain;

import java.util.Objects;

import org.neo4j.ogm.annotation.Index;
import org.neo4j.ogm.annotation.NodeEntity;
import org.neo4j.ogm.annotation.Relationship;

/**
 * @see https://dzone.com/articles/introduction-to-neo4j-ogm
 * 
 * @author Matthew Gerring
 *
 */
@NodeEntity(label="Gene")
public class Gene extends GeneticEntity {
	
	
	@Index(unique=true)
    private String gene_id;
	
	@Index(unique=true)
    private String gene_name;
	private String gene_biotype;
	   	

    @Relationship(type = "PRODUCES", direction = Relationship.OUTGOING)
    private Transcript transcript;

    // Autogenerated
	/**
	 * @return the gene_id
	 */
	public String getGene_id() {
		return gene_id;
	}


	/**
	 * @param gene_id the gene_id to set
	 */
	public void setGene_id(String gene_id) {
		this.gene_id = gene_id;
	}


	/**
	 * @return the gene_name
	 */
	public String getGene_name() {
		return gene_name;
	}


	/**
	 * @param gene_name the gene_name to set
	 */
	public void setGene_name(String gene_name) {
		this.gene_name = gene_name;
	}

	/**
	 * @return the gene_biotype
	 */
	public String getGene_biotype() {
		return gene_biotype;
	}


	/**
	 * @param gene_biotype the gene_biotype to set
	 */
	public void setGene_biotype(String gene_biotype) {
		this.gene_biotype = gene_biotype;
	}


	/**
	 * @return the transcript
	 */
	public Transcript getTranscript() {
		return transcript;
	}


	/**
	 * @param transcript the transcript to set
	 */
	public void setTranscript(Transcript transcript) {
		this.transcript = transcript;
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + Objects.hash(gene_biotype, gene_id, gene_name, transcript);
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (!(obj instanceof Gene))
			return false;
		Gene other = (Gene) obj;
		return Objects.equals(gene_biotype, other.gene_biotype) && Objects.equals(gene_id, other.gene_id)
				&& Objects.equals(gene_name, other.gene_name) && Objects.equals(transcript, other.transcript);
	}

    // Auto-generated stuff
    
}